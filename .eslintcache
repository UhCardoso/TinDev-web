[{"/home/lone/Área de Trabalho/omnistack/Omnistack8.0 - devTinder/aplicacao/frontend/src/index.js":"1","/home/lone/Área de Trabalho/omnistack/Omnistack8.0 - devTinder/aplicacao/frontend/src/App.js":"2","/home/lone/Área de Trabalho/omnistack/Omnistack8.0 - devTinder/aplicacao/frontend/src/pages/Login.js":"3","/home/lone/Área de Trabalho/omnistack/Omnistack8.0 - devTinder/aplicacao/frontend/src/routes.js":"4","/home/lone/Área de Trabalho/omnistack/Omnistack8.0 - devTinder/aplicacao/frontend/src/pages/Main.js":"5","/home/lone/Área de Trabalho/omnistack/Omnistack8.0 - devTinder/aplicacao/frontend/src/services/api.js":"6","/home/lone/Área de Trabalho/omnistack/Omnistack8.0 - devTinder/aplicacao/frontend/src/pages/Match.js":"7"},{"size":199,"mtime":1612133904033,"results":"8","hashOfConfig":"9"},{"size":189,"mtime":1612211756368,"results":"10","hashOfConfig":"9"},{"size":927,"mtime":1617384735751,"results":"11","hashOfConfig":"9"},{"size":474,"mtime":1617387222268,"results":"12","hashOfConfig":"9"},{"size":3490,"mtime":1617384724879,"results":"13","hashOfConfig":"9"},{"size":131,"mtime":1617384680920,"results":"14","hashOfConfig":"9"},{"size":1851,"mtime":1617220272949,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"8347dm",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/home/lone/Área de Trabalho/omnistack/Omnistack8.0 - devTinder/aplicacao/frontend/src/index.js",[],["33","34"],"/home/lone/Área de Trabalho/omnistack/Omnistack8.0 - devTinder/aplicacao/frontend/src/App.js",[],"/home/lone/Área de Trabalho/omnistack/Omnistack8.0 - devTinder/aplicacao/frontend/src/pages/Login.js",[],"/home/lone/Área de Trabalho/omnistack/Omnistack8.0 - devTinder/aplicacao/frontend/src/routes.js",[],"/home/lone/Área de Trabalho/omnistack/Omnistack8.0 - devTinder/aplicacao/frontend/src/pages/Main.js",["35","36","37"],"import React, {useEffect, useState} from 'react';\nimport io from 'socket.io-client'\nimport {Link} from 'react-router-dom';\nimport './Main.css';\n \nimport api from '../services/api';\n\nimport logo from '../assets/logo.svg';\nimport like from '../assets/like.svg';\nimport dislike from '../assets/dislike.svg';\n\nexport default function Main({match}) {\n    const [users, setUsers] = useState([]);\n    const [matchDev, setMatchDev] = useState(null);\n\n    useEffect(() => {\n        async function LoadUsers() {\n            const response = await api.get('/devs', {\n                headers: {\n                    user: match.params.id\n                }\n            });\n\n            setUsers(response.data);\n        }\n        LoadUsers();\n\n    }, [match.params.id]);\n\n    useEffect(() => {\n    const socket = io('https://api--tindev.herokuapp.com:443',{\n        query: {user: match.params.id}\n    });\n\n    socket.on('match', dev => {\n        setMatchDev(dev)\n    });\n        \n    }, [match.params.id]);\n\n    async function handleLike(id) {\n        await api.post(`/devs/${id}/likes`, null, {\n            headers: {user: match.params.id}\n        });\n\n        setUsers(users.filter(user => user._id != id));\n    }\n    \n    async function handleDislike(id) {\n        await api.post(`/devs/${id}/dislikes`, null, {\n            headers: {user: match.params.id}\n        });\n\n        setUsers(users.filter(user => user._id != id));\n    }\n\n    return (\n        <div className=\"main-container\">\n            <header>\n                <Link to=\"/\">\n                    <img src={logo} alt=\"Tindev\" />\n                </Link>\n                <nav>\n                    <Link>\n                        <span className=\"selected\" >Início</span>\n                    </Link>\n                    <Link to={`/dev/${match.params.id}/matchs`}>\n                        <span>Matches</span>\n                    </Link>\n                </nav>\n            </header>\n            {users.length > 0 ? (\n                <ul>\n                    {users.map(user => (\n                        <li key={user._id}>\n                            <img src={user.avatar} alt={user.name}/>\n                            <footer>\n                                <strong>{user.name}</strong>\n                                <p>{user.bio}</p>\n                            </footer>\n                            <div className=\"buttons\">\n                                <button type=\"button\" onClick={() => handleDislike(user._id)}>\n                                    <img src={dislike} alt=\"dislike\"/>\n                                </button>\n\n                                <button type=\"button\" onClick={() => handleLike(user._id)}>\n                                    <img src={like} alt=\"like\"/>\n                                </button>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <div className=\"empty\">\n                    Mais nenhum Dev foi encontrado :(\n                </div>\n            )}\n\n            {matchDev && (\n                <div className=\"match-container\">\n                    <h1>Isso é um Macth!!</h1>\n                    <img className=\"avatar\" src={matchDev.avatar}/>\n                    <strong>{matchDev.name}</strong>\n                    <p>{matchDev.bio}</p>\n                    <button type=\"button\" onClick={() => {setMatchDev(null)}}>FECHAR</button>\n                </div>\n            )}\n        </div>\n    )\n}","/home/lone/Área de Trabalho/omnistack/Omnistack8.0 - devTinder/aplicacao/frontend/src/services/api.js",[],"/home/lone/Área de Trabalho/omnistack/Omnistack8.0 - devTinder/aplicacao/frontend/src/pages/Match.js",["38"],"import React, {useEffect, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport './Match.css';\n\nimport api from '../services/api';\n\nimport logo from '../assets/logo.svg';\n\nexport default function Match({match}) {\n    const [users, setUsers] = useState([]);\n    const [showUsers, setShowUsers] = useState(true);\n\n    useEffect(() => {\n        async function LoadUsers() {\n            const response = await api.get('/dev', {\n                headers: {\n                    user: match.params.id\n                }\n            });\n            setUsers(response.data);\n            setShowUsers(false);\n            console.log(response.data)\n\n        }\n        LoadUsers();\n\n    }, [match.params.id])\n\n    function handleOpenGithub(usergit) {\n        window.open(`https://github.com/${usergit}`, '_blank');\n    }\n\n    return (\n        <div className=\"list-match-container\">\n            <header>\n                <Link to=\"/\">\n                    <img src={logo} alt=\"Tindev\" />\n                </Link>\n                <nav>\n                    <Link to={`/dev/${match.params.id}`}>\n                        <span>Início</span>\n                    </Link>\n                    <Link>\n                        <span className=\"selected\">Matches</span>\n                    </Link>\n                </nav>\n            </header>\n            <ul>\n            {users.map(user => {\n                return (\n                    <li onClick={() => {handleOpenGithub(user.user)}}>\n                        <img src={user.avatar}/>\n                        <p>{user.name}</p>\n                        <p className=\"bio\">{user.bio}</p>\n                    </li>\n                )\n            })}\n\n            {showUsers && \n                <h2 className=\"match-none\">:( Nenhum match até o momento...</h2>\n            }\n\n            </ul>\n        </div>\n    )\n}",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":46,"column":48,"nodeType":"45","messageId":"46","endLine":46,"endColumn":50},{"ruleId":"43","severity":1,"message":"44","line":54,"column":48,"nodeType":"45","messageId":"46","endLine":54,"endColumn":50},{"ruleId":"47","severity":1,"message":"48","line":102,"column":21,"nodeType":"49","endLine":102,"endColumn":68},{"ruleId":"47","severity":1,"message":"48","line":52,"column":25,"nodeType":"49","endLine":52,"endColumn":49},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]